{"version":3,"sources":["Store/reducers/snackbar.js","Store/reducers/LearningParameters.js","Store/reducers/index.js","Store/index.js","Store/actions/snackbar.js","Enhancements/SnackBar.js","Enhancements/Canvas.js","Enhancements/NewSnake.js","ml/ControllerDataset.js","ml/index.js","Layout/Learning.js","Store/actions/LearningParameters.js","Layout/GameButtons.js","Layout/SampleSubmission.js","Layout/index.js","App.js","serviceWorker.js","index.js"],"names":["SnackbarReducer","state","arguments","length","undefined","initialState","Snackbar","action","type","Object","objectSpread","open","message","LearningParametersReducers","LearningParameters","defineProperty","name","value","duration","GameStatus","playing","score","epocs","learningRate","optimizer","loss","layers","reducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","configureStore","createStore","app","applyMiddleware","createLogger","thunk","snackbarError","variantIcon","success","react_default","a","createElement","CheckCircle","warning","Warning","error","esm_Error","info","Info","useStyles","makeStyles","theme","backgroundColor","green","palette","dark","primary","main","amber","icon","fontSize","marginRight","spacing","iconVariant","opacity","display","alignItems","MySnackbarContentWrapper","props","classes","variant","SnackbarContent","className","aria-describedby","id","IconButton","key","aria-label","color","onClick","onClose","Close","connect","dispatch","handleClose","anchorOrigin","vertical","horizontal","autoHideDuration","SnackBar_MySnackbarContentWrapper","C","this","height","width","pixelRatio","ctx","document","getContext","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","createHiDPICanvas","w","h","ratio","can","style","setTransform","getCtx","create","parent","el","append","console","drawDot","point","radius","beginPath","arc","x","y","Math","PI","fillStyle","fill","drawCircle","center","stroke","drawLine","p1","p2","moveTo","lineTo","strokeStyle","lineWidth","writeText","obj","textAlign","font","textBaseline","fillText","msg","fillRegion","fillRect","background","clearRegion","clearRect","fillRegionAlpha","globalAlpha","transitionBackground","startColor","endColor","frame","totalFrames","Snake","snake","pos","availableDirection","directionKey","syncPos","food","prevPos","board","size","cols","rows","stop","setup","_this","floor","log","restart","pauseGame","keyPressed","direction","status","moveSnake","newX","newY","newPos","last","pop","_loop","i","push","filter","item","index","unshift","generateFood","random","collide","checkCollision","checkIfAteFood","renderPlaying","canvas","concat","renderEnd","ControllerDataset","numClasses","classCallCheck","createClass","example","label","tf","toInt","xs","ys","oldX","oldY","dispose","ML","webcam","num_classes","controllerDataset","mobileNetModel","model","isPredicting","init","_init","asyncToGenerator","regenerator_default","mark","_callee","screenshot","wrap","_context","prev","next","loadModel","sent","tfd","getElementById","t0","store","abrupt","capture","predict","expandDims","_x","_x2","apply","_loadModel","_callee2","loadedModel","layer","_context2","getLayer","inputs","outputs","output","getImage","_getImage","_callee3","img","processedImg","_context3","toFloat","div","sub","addExample","_addExample","_callee4","_context4","_x3","train","_train","_callee6","reduxStore","batchSize","_context6","Error","getState","flatten","inputShape","shape","slice","dense","units","activation","kernelInitializer","useBias","adam","compile","fit","epochs","callbacks","onBatchEnd","_onBatchEnd","_callee5","batch","logs","_context5","setLoss","toFixed","_x4","_x5","_predict","_callee7","embeddings","predictions","predictedClass","classId","_context7","as1D","argMax","data","setSnakeDirection","val","innerText","CustomSelect","FormControl","fullWidth","InputLabel","Select","onChange","e","target","options","map","MenuItem","CustomButton","_ref","children","title","objectWithoutProperties","Tooltip","Button","assign","borderRadius","marginBottom","Learning","handleChange","setParameter","componentDidMount","trainModel","play","params","Grid","container","learningOptions","small","Learning_CustomSelect","videoContainer","autoPlay","iconsContainer","Learning_CustomButton","FitnessCenter_default","TrendingUp_default","React","Component","withStyles","& > *","justifyContent","flexDirection","styles","levelContainer","CustomIcon","gameCanvas","Canvas","frameRate","directions","levels","currentDirection","directionContainer","startGame","setTimeout","requestAnimationFrame","GameButtons","_React$useState","useState","_React$useState2","slicedToArray","setPlaying","_React$useState3","_React$useState4","level","setLevel","useEffect","querySelector","bounds","getBoundingClientRect","addEventListener","indexOf","code","preventDefault","GameButtons_CustomIcon","Pause_default","PlayArrow_default","Refresh_default","setFrameRate","imageBlock","margin","paper","boxShadow","shadows","position","overflow","transition","selected","innerBlock","paragraph","& > canvas","ImageBlock","ButtonBase","samples","SampleSubmission","up","down","left","right","setSelected","setState","prevState","addImage","image","draw","imageData","j","ImageData","dataSync","putImageData","_this2","blockHolder","iconButton","paddingTop","paddingBottom","maxWidth","canvasContainer","Layout","Layout_GameButtons","Layout_Learning","Layout_SampleSubmission","darkTheme","createMuiTheme","App","es","react_router_dom","ThemeProvider","CssBaseline","Enhancements_SnackBar","src_Layout","Boolean","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c6aaa889.chunk.js","sourcesContent":["import { initialState } from './index'\n\nconst SnackbarReducer = (state = initialState.Snackbar, action) => {\n  switch(action.type){\n    case 'SNACKBAR::SUCCESS':\n      return {\n        ...state,\n        open: true,\n        message: action.message,\n        type: 'success'\n      }\n    case 'SNACKBAR::ERROR':\n      return {\n        ...state,\n        open: true,\n        message: action.message,\n        type: 'error'\n      }\n    case 'SNACKBAR::WARNING':\n      return {\n        ...state,\n        open: true,\n        message: action.message,\n        type: 'warning'\n      }\n    case 'SNACKBAR::INFO':\n      return {\n        ...state,\n        open: true,\n        message: action.message,\n        type: 'info'\n      }\n    case 'SNACKBAR::CLOSE':\n      return {\n        ...state,\n        open: false,\n        message: ''\n      }\n    default:\n      return state\n  }\n}\n\nexport default SnackbarReducer","import { initialState } from './index'\r\n\r\nconst LearningParametersReducers = (state = initialState.LearningParameters, action) => {\r\n  switch(action.type){\r\n\r\n    case \"LEARNING_PARAMETERS::SET\":\r\n      return {\r\n        ...state,\r\n        [action.name]: action.value\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default LearningParametersReducers","import { combineReducers } from 'redux'\nimport Snackbar from './snackbar'\nimport LearningParameters from './LearningParameters'\n\nexport const initialState = {\n  Snackbar: {\n    open: false,\n    message: 'This is default message',\n    type: 'success',\n    duration: 6000\n  },\n  GameStatus: {\n    playing: false,\n    score: 0\n  },\n  LearningParameters: {\n    epocs: '5',\n    learningRate: '0.001',\n    optimizer: \"adam\",\n    loss: \"categoricalCrossentropy\",\n    layers: 50\n  }\n}\n\nconst reducers = combineReducers({\n  Snackbar,\n  LearningParameters\n})\n\nexport default reducers;","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport app from './reducers'\n\n/**\n * @name configureStore.js\n * @type { Stateless component }\n * @requires redux-thunk,redux-logger\n * @description: this is the function that returns a store object from redux.\n */\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst configureStore = () => {\n    return createStore(app, composeEnhancers(applyMiddleware(createLogger(), thunk)));\n};\n\nexport default configureStore();","export const snackbarSuccess = (message) => ({\n  type: \"SNACKBAR::SUCCESS\",\n  message\n})\n\n\nexport const snackbarError = (message) => ({\n  type: \"SNACKBAR::ERROR\",\n  message\n})\n\nexport const snackbarWarning = (message) => ({\n  type: \"SNACKBAR::WARNING\",\n  message\n})\n\nexport const snackbarInfo = (message) => ({\n  type: \"SNACKBAR::INFO\",\n  message\n})\n\nexport const closeSnackbar = () => ({\n  type: \"SNACKBAR::CLOSE\"\n})","import React from \"react\";\nimport { Snackbar, IconButton, SnackbarContent } from '@material-ui/core';\nimport {Close} from '@material-ui/icons'\nimport PropTypes from 'prop-types';\nimport {green, amber} from '@material-ui/core/colors'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux'\nimport { CheckCircle, Warning, Error, Info } from '@material-ui/icons'\nimport { closeSnackbar } from '../Store/actions/snackbar'\n\nconst variantIcon = {\n  success: <CheckCircle />,\n  warning: <Warning />,\n  error: <Error />,\n  info: <Info />,\n};\n\nconst useStyles = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n    marginRight: theme.spacing(1)\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}))\n\nconst MySnackbarContentWrapper = (props) => {\n  const classes = useStyles();\n  const {variant} = props\n\n  return (\n    <SnackbarContent\n      className={classes[variant]}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          {variantIcon[variant]}\n          {props.message}\n        </span>\n      }\n      action={[\n        <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={props.onClose}>\n          <Close />\n        </IconButton>,\n      ]}\n    />\n  )\n}\n\nconst SnackBar = (props) => {\n  //console.log(\"Snackbar props\", props)\n  return(\n  <Snackbar\n    anchorOrigin={{\n      vertical: 'top',\n      horizontal: 'right',\n    }}\n    open={props.open}\n    autoHideDuration={props.duration}\n    onClose={props.handleClose}\n  >\n    <MySnackbarContentWrapper\n      onClose={props.handleClose}\n      variant={props.type}\n      message={props.message}\n    />\n  </Snackbar>\n);\n}\n\nSnackBar.propTypes = {\n  open: PropTypes.bool,\n  message: PropTypes.string,\n  handleClose: PropTypes.func\n}\n\nconst mapStateToProps = state => ({\n  ...state.Snackbar\n})\n\nconst mapDispatchToProps = dispatch => ({\n  handleClose: () => dispatch(closeSnackbar())\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SnackBar);","let C = function(){\r\n  this.height = 100\r\n  this.width = 100\r\n  this.pixelRatio = function () {\r\n    var ctx = document.createElement(\"canvas\").getContext(\"2d\"),\r\n        dpr = window.devicePixelRatio || 1,\r\n        bsr = ctx.webkitBackingStorePixelRatio ||\r\n              ctx.mozBackingStorePixelRatio ||\r\n              ctx.msBackingStorePixelRatio ||\r\n              ctx.oBackingStorePixelRatio ||\r\n              ctx.backingStorePixelRatio || 1;\r\n  \r\n    return dpr / bsr;\r\n  }\r\n  \r\n  this.createHiDPICanvas = function(w, h, ratio) {\r\n    if (!ratio) { ratio = this.pixelRatio() }\r\n    var can = document.createElement(\"canvas\");\r\n    can.width = w * ratio;\r\n    can.height = h * ratio;\r\n    can.style.width = w + \"px\";\r\n    can.style.height = h + \"px\";\r\n    can.getContext(\"2d\").setTransform(ratio, 0, 0, ratio, 0, 0);\r\n    return can;\r\n  }\r\n\r\n  this.getCtx = function() {\r\n    return this.ctx;\r\n  }\r\n\r\n  this.create = function(width, height, parent, ratio){\r\n    this.el = this.createHiDPICanvas(width, height, ratio)\r\n    this.height = height\r\n    this.width = width\r\n    this.ctx = this.el.getContext('2d')\r\n    if(parent === undefined || parent === null){\r\n      console.error(\"Parent is not defined\")\r\n      return \r\n    }\r\n    parent.append(this.el)\r\n  }\r\n  this.drawDot = function(point, radius, color=\"#2ae\") {\r\n    //console.log(\"Drawing point\", point)\r\n    this.ctx.beginPath()\r\n    this.ctx.arc(point.x, point.y, radius, 0, 2 * Math.PI)\r\n    this.ctx.fillStyle = color\r\n    this.ctx.fill()\r\n    //ctx.fillText(point.x+\" \"+point.y, point.x + 20, point.y)\r\n    //drawLine(ctx, {x: window.innerWidth / 2, y: window.innerHeight / 2}, point)\r\n  }\r\n  this.drawCircle = function(center, radius){\r\n    this.ctx.beginPath()\r\n    this.ctx.arc(center.x, center.y, radius, 0, 2 * Math.PI)\r\n    this.ctx.stroke()\r\n  }\r\n  this.drawLine = function(p1, p2){\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(p1.x, p1.y);\r\n    this.ctx.lineTo(p2.x, p2.y);\r\n    this.ctx.strokeStyle = \"rgba(255, 255, 255, .2)\"\r\n    this.ctx.lineWidth=1\r\n    this.ctx.stroke();\r\n  }\r\n\r\n  this.writeText = function(obj) {\r\n    this.ctx.textAlign = obj.textAlign || 'start'\r\n    this.ctx.font = obj.font || \"16px Roboto\"\r\n    this.ctx.fillStyle = obj.color || '#fff'\r\n    this.ctx.textBaseline=\"middle\"\r\n    this.ctx.fillText(obj.msg, obj.x, obj.y)\r\n  }\r\n\r\n  this.fillRegion = function(point, width, height, color) {\r\n    this.ctx.fillStyle = color || \"rgba(0, 0, 0, .4)\"\r\n    this.ctx.fillRect(point.x, point.y, width, height)\r\n  }\r\n  this.background = function(color){\r\n    //console.log(color)\r\n    this.ctx.fillStyle = color\r\n    this.ctx.fillRect(0, 0, this.width, this.height)\r\n  }\r\n  this.clearRegion = function(point, width, height){\r\n    this.ctx.clearRect(point.x, point.y, width, height)\r\n  }\r\n\r\n  this.fillRegionAlpha = function(point, width, height, color, opacity) {\r\n    \r\n    this.ctx.globalAlpha = opacity\r\n    this.ctx.fillStyle = color\r\n    this.ctx.fillRect(point.x, point.y, width, height)\r\n    this.ctx.globalAlpha = 1\r\n  }\r\n\r\n  this.transitionBackground = function(startColor, endColor, frame, totalFrames){\r\n    var opacitySteps = totalFrames\r\n    var opacity=100*(frame/opacitySteps);\r\n    if(frame===totalFrames){ opacity=100; }\r\n  \r\n    // clear the canvas\r\n    this.ctx.clearRect(0,0,this.width,this.height);\r\n  \r\n    this.ctx.globalAlpha=1;\r\n    this.ctx.fillStyle=endColor;\r\n    this.ctx.fillRect(0, 0, this.width, this.height);\r\n  \r\n    // draw with the starting color using a lessening opacity\r\n    this.ctx.globalAlpha=(100-opacity)/100;\r\n    this.ctx.fillStyle=startColor;\r\n    this.ctx.fillRect(0, 0, this.width, this.height);\r\n    //ctx.strokeRect(20,20,100,75);\r\n  \r\n    // draw with the ending color using a increasing opacity\r\n    //ctx.strokeRect(20,20,100,75);\r\n  \r\n    // clean up, reset globalAlpha to it's default of 1.00\r\n    this.ctx.globalAlpha=1.00;\r\n  \r\n    // return if all steps have been played\r\n    //if(++opacityStep>=24){return;}\r\n  }\r\n\r\n  // this.background = function(color) {\r\n  //   this.fillRegion({x: 0, y: 0}, this.width, this.height, color)\r\n  // }\r\n}\r\n\r\nexport default C;\r\n","class Snake {\r\n  snake = {\r\n    color: \"#ffffff\",\r\n    pos: [{\r\n        x: 1,\r\n        y: 1\r\n    }],\r\n    availableDirection: ['up', 'right', 'down', 'left'],\r\n    directionKey: 3,\r\n    syncPos : [\r\n        {x: 0, y: -1},\r\n        {x: 1, y: 0},\r\n        {x: 0, y: 1},\r\n        {x: -1, y: 0}\r\n    ],\r\n    score: 0\r\n  }\r\n  food = {\r\n    x: 0,\r\n    y: 3,\r\n    color: \"#f50057\",\r\n    prevPos : []\r\n  }\r\n  board = {\r\n    background: \"#212121\",\r\n    size: 20,\r\n    cols: 0,\r\n    rows: 0,\r\n    stop: true\r\n  }\r\n\r\n  setup = (width, height) => {\r\n    this.board.cols = Math.floor(width / this.board.size)\r\n    this.board.rows = Math.floor(height / this.board.size)\r\n    console.log(this.board, this.food)\r\n  }\r\n\r\n  restart = () => {\r\n    this.pauseGame(false)\r\n    this.snake.pos = [{\r\n        x: 1,\r\n        y: 1\r\n      }]\r\n    this.snake.directionKey = 1\r\n    this.snake.score = 0\r\n    \r\n    this.food.x = 0\r\n    this.food.y = 3\r\n  }\r\n\r\n  keyPressed = (key) => {\r\n    if(key === 'ArrowUp' && this.snake.directionKey !== 2){\r\n      this.snake.directionKey = 0\r\n    }else if(key === 'ArrowRight' && this.snake.direction !== 3){\r\n      this.snake.directionKey = 1\r\n    }else if(key === 'ArrowDown' && this.snake.directionKey !==0){\r\n      this.snake.directionKey = 2\r\n    }else if(key === 'ArrowLeft' && this.snake.directionKey !== 1){\r\n      this.snake.directionKey = 3\r\n    }\r\n  }\r\n\r\n  pauseGame = (status) => {\r\n    console.log(\"Got request. changing staus to \", status)\r\n    this.board.stop = status\r\n  }\r\n\r\n  moveSnake = () => {\r\n    let newX = this.snake.pos[0].x + this.snake.syncPos[this.snake.directionKey].x \r\n    let newY = this.snake.pos[0].y + this.snake.syncPos[this.snake.directionKey].y\r\n    //console.log(newX, newY)\r\n    let newPos = {\r\n      x:  newX < 0 ? this.board.cols - 1 : newX % this.board.cols,\r\n      y:  newY < 0 ? this.board.rows - 1 : newY % this.board.rows,\r\n    }\r\n    //console.log(newPos)\r\n    let last = this.snake.pos.pop();\r\n    //console.log(last)\r\n    for(let i = 0; i < this.food.prevPos.length; i++){\r\n        if(last.x === this.food.prevPos[i].x && last.y === this.food.prevPos[i].y){\r\n            this.snake.pos.push(last)\r\n            //console.log(food.prevPos)\r\n            this.food.prevPos = this.food.prevPos.filter((item, index) => index !== i)\r\n            //console.log(food.prevPos)\r\n        }\r\n\r\n    }\r\n    this.snake.pos.unshift(newPos)\r\n  }\r\n\r\n  generateFood = () => {\r\n    this.food.x = Math.floor(Math.random() * this.board.cols)\r\n    this.food.y = Math.floor(Math.random() * this.board.rows)\r\n    let collide = false\r\n    for(let i = 0; i< this.snake.pos.length; i++) {\r\n        if(this.food.x === this.snake.pos[i].x && this.food.y === this.snake.pos[i].y){\r\n          collide = true\r\n          break;\r\n        }\r\n    }\r\n    if(collide) {\r\n      this.generateFood();\r\n    }\r\n  }\r\n\r\n  checkCollision = () => {\r\n    //console.log(this.board.cols, this.snake.pos[0].x >= this.board.cols, this.snake.pos[0].x < 0, this.snake.pos[0].y < 0 , this.snake.pos[0].y >= this.board.rows)\r\n    if(this.snake.pos[0].x >= this.board.cols || this.snake.pos[0].x < 0 || this.snake.pos[0].y < 0 || this.snake.pos[0].y >= this.board.rows){\r\n      console.log(\"Out of bound collision\")\r\n      this.pauseGame(true)\r\n    }\r\n    //self collision\r\n    for(let i = 2; i < this.snake.pos.length; i++) {\r\n      if(this.snake.pos[i].x === this.snake.pos[0].x && this.snake.pos[i].y === this.snake.pos[0].y){\r\n        console.log(\"Self collision\")\r\n        this.pauseGame(true)\r\n      }\r\n    }\r\n  }\r\n\r\n  checkIfAteFood = () => {\r\n    if(this.snake.pos[0].x === this.food.x && this.snake.pos[0].y === this.food.y){\r\n      this.food.prevPos.push({x: this.food.x, y: this.food.y})\r\n      this.snake.score++\r\n      this.generateFood();\r\n    }\r\n  }\r\n\r\n  renderPlaying = (canvas) => {\r\n    canvas.background(this.board.background)\r\n    canvas.fillRegion({\r\n      x: this.board.size * this.food.x, \r\n      y: this.board.size * this.food.y}, \r\n      this.board.size, \r\n      this.board.size, \r\n      this.food.color\r\n    )\r\n    for(let i = 0; i < this.snake.pos.length; i++){\r\n      canvas.fillRegion({\r\n          x: this.board.size * this.snake.pos[i].x,\r\n          y: this.board.size * this.snake.pos[i].y\r\n        },\r\n        this.board.size,\r\n        this.board.size,\r\n        this.snake.color\r\n      )\r\n    }\r\n    canvas.writeText({x: canvas.width - 16, y: 16, textAlign: \"end\", msg: `Score: ${this.snake.score}`, color: \"#f50057\"})\r\n    this.moveSnake()\r\n    this.checkCollision()\r\n    this.checkIfAteFood()\r\n  }\r\n\r\n  renderEnd = (canvas) => {\r\n    canvas.drawDot({x: canvas.width/2, y: canvas.height/2}, 100)\r\n    \r\n    canvas.writeText({x: canvas.width /2, y: canvas.height/2, textAlign: \"center\", msg: `You died. Restart game`})\r\n  }\r\n}\r\n\r\nexport default Snake","import * as tf from '@tensorflow/tfjs';\r\n\r\n/**\r\n * A dataset for webcam controls which allows the user to add example Tensors\r\n * for particular labels. This object will concat them into two large xs and ys.\r\n */\r\nexport class ControllerDataset {\r\n  constructor(numClasses) {\r\n    this.numClasses = numClasses;\r\n  }\r\n\r\n  /**\r\n   * Adds an example to the controller dataset.\r\n   * @param {Tensor} example A tensor representing the example. It can be an image,\r\n   *     an activation, or any other type of Tensor.\r\n   * @param {number} label The label of the example. Should be a number.\r\n   */\r\n  addExample(example, label) {\r\n    // One-hot encode the label.\r\n    const y = tf.tidy(\r\n        () => tf.oneHot(tf.tensor1d([label]).toInt(), this.numClasses));\r\n\r\n    if (this.xs == null) {\r\n      // For the first example that gets added, keep example and y so that the\r\n      // ControllerDataset owns the memory of the inputs. This makes sure that\r\n      // if addExample() is called in a tf.tidy(), these Tensors will not get\r\n      // disposed.\r\n      this.xs = tf.keep(example);\r\n      this.ys = tf.keep(y);\r\n    } else {\r\n      const oldX = this.xs;\r\n      this.xs = tf.keep(oldX.concat(example, 0));\r\n\r\n      const oldY = this.ys;\r\n      this.ys = tf.keep(oldY.concat(y, 0));\r\n\r\n      oldX.dispose();\r\n      oldY.dispose();\r\n      y.dispose();\r\n    }\r\n  }\r\n}","import * as tf from '@tensorflow/tfjs'\r\nimport * as tfd from '@tensorflow/tfjs-data'\r\nimport { ControllerDataset } from './ControllerDataset'\r\nimport store from '../Store'\r\nimport {snackbarError} from '../Store/actions/snackbar'\r\nimport {setSnakeDirection} from '../Layout/GameButtons'\r\nimport {setLoss} from '../Layout/Learning'\r\n\r\n\r\nconst ML = {\r\n  webcam: null,\r\n  num_classes: 4,\r\n  controllerDataset: null,\r\n  mobileNetModel: '',\r\n  model: '',\r\n  isPredicting: false,\r\n  init: async (num_classes, id) => {  \r\n    ML.num_classes = num_classes\r\n    ML.controllerDataset = new ControllerDataset(num_classes)\r\n    ML.mobileNetModel = await ML.loadModel();\r\n    try {\r\n      ML.webcam = await tfd.webcam(document.getElementById(id));\r\n      console.log(ML.webcam)\r\n    } catch (e) {\r\n      console.log(\"Error in initializing camera\", e);\r\n      store.dispatch(snackbarError(\"Unable to initialize camera\"))\r\n      return\r\n      //document.getElementById('no-webcam').style.display = 'block';\r\n    }\r\n\r\n    const screenshot = await ML.webcam.capture()\r\n    ML.mobileNetModel.predict(screenshot.expandDims(0));\r\n    screenshot.dispose();\r\n  },\r\n\r\n  loadModel: async () => {\r\n    const loadedModel = await tf.loadLayersModel('/mlGame/saved_model/my-model.json');\r\n    console.log(loadedModel)\r\n    // Return a model that outputs an internal activation.\r\n    const layer = loadedModel.getLayer('conv_pw_13_relu');\r\n    return tf.model({inputs: loadedModel.inputs, outputs: layer.output})\r\n  },\r\n\r\n  getImage: async () => {\r\n    if(ML.webcam === undefined || ML.webcam === null){\r\n      store.dispatch(snackbarError(\"Webcam not found\"))\r\n      return ''\r\n    }\r\n    const img = await ML.webcam.capture();\r\n    const processedImg =\r\n        tf.tidy(() => img.expandDims(0).toFloat().div(127).sub(1));\r\n    img.dispose();\r\n    return processedImg;\r\n  },\r\n\r\n  addExample: async (label) => {\r\n    let img = await ML.getImage();\r\n    ML.controllerDataset.addExample(ML.mobileNetModel.predict(img), label);\r\n    img.dispose();\r\n  },\r\n\r\n  train: async () => {\r\n    if (ML.controllerDataset.xs == null) {\r\n      throw new Error('Add some examples before training!');\r\n    }\r\n\r\n    const reduxStore = store.getState().LearningParameters\r\n\r\n    ML.model = tf.sequential({\r\n      layers: [\r\n        tf.layers.flatten(\r\n            {inputShape: ML.mobileNetModel.outputs[0].shape.slice(1)}),\r\n        tf.layers.dense({\r\n          units: reduxStore.layers,\r\n          activation: 'relu',\r\n          kernelInitializer: 'varianceScaling',\r\n          useBias: true\r\n        }),\r\n        tf.layers.dense({\r\n          units: ML.num_classes,\r\n          kernelInitializer: 'varianceScaling',\r\n          useBias: false,\r\n          activation: 'softmax'\r\n        })\r\n      ]\r\n    });\r\n\r\n    const optimizer = tf.train.adam(reduxStore.learningRate);\r\n    ML.model.compile({optimizer: optimizer, loss: reduxStore.loss});\r\n    const batchSize =\r\n        Math.floor(ML.controllerDataset.xs.shape[0] * 0.5);\r\n    if (!(batchSize > 0)) {\r\n      throw new Error(\r\n          `Batch size is 0 or NaN. Please choose a non-zero fraction.`);\r\n    }\r\n  \r\n    // Train the model! Model.fit() will shuffle xs & ys so we don't have to.\r\n    ML.model.fit(ML.controllerDataset.xs, ML.controllerDataset.ys, {\r\n      batchSize,\r\n      epochs: reduxStore.epocs,\r\n      callbacks: {\r\n        onBatchEnd: async (batch, logs) => {\r\n          setLoss(logs.loss.toFixed(4))\r\n        }\r\n      }\r\n    });\r\n  },\r\n\r\n  predict: async () => {\r\n    while (ML.isPredicting) {\r\n      const img = await ML.getImage();\r\n      const embeddings = ML.mobileNetModel.predict(img)\r\n      const predictions = ML.model.predict(embeddings)\r\n      const predictedClass = predictions.as1D().argMax();\r\n      const classId = (await predictedClass.data())[0];\r\n      img.dispose();\r\n\r\n      setSnakeDirection(classId)\r\n      \r\n      await tf.nextFrame();\r\n    }\r\n  }\r\n}\r\n\r\nexport default ML","import React from 'react'\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport Select from '@material-ui/core/Select'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport ML from '../ml/index'\r\nimport Train from '@material-ui/icons/FitnessCenter'\r\nimport Predict from '@material-ui/icons/TrendingUp'\r\nimport Button from '@material-ui/core/Button'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\n//import { Button, IconButton, Tooltip } from '@material-ui/core'\r\nimport { connect } from 'react-redux'\r\nimport {setParameter} from '../Store/actions/LearningParameters'\r\n\r\n\r\nconst styles = theme => ({\r\n  learningOptions: {\r\n    '& > *': {\r\n      marginBottom: theme.spacing(2)\r\n    }\r\n  },\r\n  webcam: {\r\n    background: \"#212121\"\r\n  },\r\n  videoContainer: {\r\n    display: 'flex',\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'space-between'\r\n  },\r\n  iconsContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  small: {\r\n    fontSize: 10\r\n  }\r\n})\r\n\r\nexport const setLoss = val => {\r\n  //console.log(document.getElementById(\"loss\"), val)\r\n  document.getElementById(\"loss\").innerText = val\r\n}\r\n\r\nexport const CustomSelect = props => (\r\n  <FormControl fullWidth>\r\n    <InputLabel>{props.label}</InputLabel>\r\n    <Select value={props.value} onChange={e => props.onChange(e.target.value, props.name)} fullWidth>\r\n      {\r\n        props.options.map((item, index) => <MenuItem key={index} value={item}> {item} </MenuItem>)\r\n      }\r\n    </Select>\r\n  </FormControl>\r\n)\r\n\r\nconst CustomButton = ({children, title, ...props}) => (\r\n  <Tooltip title={title}>\r\n    <Button {...props} color=\"secondary\" variant=\"contained\" style={{borderRadius: \"100%\", width: 64, height: 64, marginBottom: 8}}>\r\n      {children}\r\n    </Button>\r\n  </Tooltip>\r\n)\r\n\r\nconst learningRate = [\"0.1\", \"0.01\", \"0.001\", \"0.0001\", \"0.00001\"]\r\nconst epocs = [\"1\", \"5\", \"10\", \"15\", \"20\"]\r\nconst optimizer = [\"adam\"]\r\nconst loss = [\"categoricalCrossentropy\", \"binaryCrossentropy\", \"meanAbsoluteError\", \"meanSquaredError\", \"sparseCategoricalAccuracy\"]\r\nconst layers = [20, 50, 100, 150]\r\n\r\n\r\nclass Learning extends React.Component {\r\n\r\n  handleChange = (value, name) => {\r\n    this.props.setParameter(name, value)\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    ML.init(4, 'webcam')\r\n  }\r\n\r\n  trainModel = () => {\r\n    ML.isPredicting = false\r\n    ML.train()\r\n  }\r\n\r\n  play = () => {\r\n    ML.isPredicting=true\r\n    ML.predict()\r\n  }\r\n\r\n  render() {\r\n\r\n    const {classes} = this.props\r\n    const params = this.props.LearningParameters\r\n\r\n    return (\r\n      <Grid container alignItems={'center'}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={4} className={classes.learningOptions}>\r\n          <div>Loss: <span id=\"loss\">Infinity</span> <span className={ classes.small }>(Closer to zero is better)</span></div>\r\n          <CustomSelect options={epocs} onChange={this.handleChange} name={\"epocs\"} value={params.epocs} label={\"Training cycle\"}/>\r\n          <CustomSelect options={learningRate} onChange={this.handleChange} name={\"learningRate\"} value={params.learningRate} label={\"Learning Rate\"}/>\r\n          <CustomSelect options={optimizer} onChange={this.handleChange} name={\"optimizer\"} value={params.optimizer} label={\"Optimizer\"}/>\r\n          <CustomSelect options={loss} onChange={this.handleChange} name={\"loss\"} value={params.loss} label={\"Loss function\"}/>\r\n          <CustomSelect options={layers} onChange={this.handleChange} name=\"layers\" value={params.layers} label={\"Hidden layers\"} />\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={6}>\r\n          <div className={classes.videoContainer}>\r\n            <video id=\"webcam\" autoPlay={true} className={classes.webcam} height=\"224\" width=\"224\"></video>\r\n            <div className={classes.iconsContainer}>\r\n              <CustomButton title={'Train'} onClick={this.trainModel}> <Train /> </CustomButton>\r\n              <CustomButton title={'Predict'} onClick={this.play}><Predict /></CustomButton>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  LearningParameters: state.LearningParameters\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setParameter: (name, value) => dispatch(setParameter(name, value))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Learning));","export const setParameter = (name, value) => ({\r\n  type: \"LEARNING_PARAMETERS::SET\",\r\n  name, \r\n  value\r\n})","import React from 'react'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport PlayArrow from '@material-ui/icons/PlayArrow'\r\nimport Pause from '@material-ui/icons/Pause'\r\nimport Refresh from '@material-ui/icons/Refresh'\r\nimport Canvas from '../Enhancements/Canvas'\r\nimport Snake from '../Enhancements/NewSnake'\r\nimport {CustomSelect} from './Learning'\r\n\r\nconst styles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    '& > *' : {\r\n      marginRight: 32\r\n    }\r\n  },\r\n  levelContainer: {\r\n    display: 'inline-block',\r\n    width: 200\r\n  }\r\n}))\r\n\r\nconst CustomIcon = props => <Tooltip title={props.title}><IconButton onClick={props.onClick}>{props.children}</IconButton></Tooltip>\r\nlet gameCanvas = new Canvas()\r\nlet snake = new Snake()\r\nlet frameRate = 2\r\nconst directions = [\"ArrowUp\", 'ArrowDown', 'ArrowRight', 'ArrowLeft']\r\nconst levels = [1, 2, 3, 4, 5, 6, 7]\r\nlet currentDirection = [\"Up\", \"Down\", \"Right\", \"Left\"]\r\nlet directionContainer = null\r\n\r\nexport const setSnakeDirection = (classId) => {\r\n  snake.keyPressed(directions[classId])\r\n  directionContainer.innerText = currentDirection[classId]\r\n}\r\n\r\nfunction startGame(){\r\n  window.setTimeout(() => window.requestAnimationFrame(startGame), 1000 / (frameRate))\r\n  if(snake.board.stop){\r\n    //console.log(snake.board.stop)\r\n    //console.log(\"Game is stopped\")\r\n    snake.renderEnd(gameCanvas)\r\n    return\r\n  }\r\n  snake.renderPlaying(gameCanvas)\r\n}\r\n\r\n\r\n\r\nfunction GameButtons(props){\r\n\r\n  let [playing, setPlaying] = React.useState(false)\r\n  let [level, setLevel ] = React.useState(1)\r\n  const classes = styles()\r\n\r\n  React.useEffect(() => {\r\n    //initialize board and add event listeners\r\n    directionContainer = document.querySelector(\"#direction\")\r\n    let container = document.querySelector(\"#game-canvas\")\r\n    const bounds = container.getBoundingClientRect()\r\n    gameCanvas.create(bounds.width, bounds.height, container)\r\n    gameCanvas.background(\"#212121\")\r\n    snake.setup(bounds.width, bounds.height)\r\n    window.addEventListener(\"keydown\", function(e){\r\n      //console.log([\"ArrowUp\", \"ArrowDown\"].indexOf(e.code) !== -1)\r\n      if([\"ArrowUp\", \"ArrowDown\"].indexOf(e.code) !== -1){\r\n        //console.log(\"Entered\")\r\n        e.preventDefault()\r\n      }\r\n      snake.keyPressed(e.code)\r\n    })\r\n    startGame()\r\n  }, [])\r\n\r\n  function gameStatus() {\r\n    if(playing){\r\n      //stop the game\r\n      snake.pauseGame(true)\r\n    }else {\r\n      snake.pauseGame(false)\r\n      //startGame()\r\n    }\r\n    setPlaying(!playing)\r\n  }\r\n\r\n  function setFrameRate(value){\r\n    frameRate = value * 3\r\n    setLevel(value)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <CustomIcon color=\"primary\" title={playing ? \"Pause Game\": \"Start Game\"} onClick={gameStatus}>\r\n      {\r\n        playing ? <Pause /> : <PlayArrow /> \r\n      }\r\n      </CustomIcon>\r\n      <CustomIcon title={\"Restart\"} onClick={() => snake.restart()}><Refresh /></CustomIcon>\r\n      <span className={classes.levelContainer}>\r\n        <CustomSelect options={levels} onChange={(value, name) => setFrameRate(value)} name={\"level\"} value={level} label={\"Difficulty Level\"}/>\r\n      </span>\r\n      <div >Predicted direction: <span id=\"direction\">Unknown</span></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GameButtons","import React from 'react'\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles'\r\nimport ButtonBase from '@material-ui/core/ButtonBase'\r\nimport Button from '@material-ui/core/Button'\r\nimport Canvas from '../Enhancements/Canvas'\r\nimport ML from '../ml/index'\r\nimport {setSnakeDirection} from './GameButtons'\r\n\r\nconst _styles = theme => ({\r\n  container: {\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1)\r\n  },\r\n  blockHolder: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: \"center\"\r\n  },\r\n  iconButton: {\r\n    height: 100,\r\n    width: 100,\r\n    borderRadius: '100%'\r\n  },\r\n})\r\n\r\nconst styles = makeStyles(theme => ({\r\n  imageBlock: {\r\n    margin: \"auto\",\r\n    display: 'inline-block',\r\n    background: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[1],\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n    overflow: 'hidden',\r\n    transition: 'all .3s ease-out'\r\n  },\r\n  selected: {\r\n    boxShadow: \"0px 0px 16px #2ae\"\r\n  },\r\n  innerBlock: {\r\n    height: 112,\r\n    width: 112,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between'\r\n  },\r\n  paragraph: {\r\n    margin: 0\r\n  },\r\n  canvas: {\r\n    background: '#212121',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    position: 'relative',\r\n    overflow: 'hidden',\r\n    '& > canvas':{\r\n      display: 'block'\r\n    }\r\n  }\r\n}))\r\n\r\nfunction ImageBlock(props) {\r\n  const classes = styles()\r\n  return (\r\n    <ButtonBase className={props.selected === props.position ? classes.selected+\" \"+classes.imageBlock : classes.imageBlock} onClick={() => props.onClick(props.position)}>\r\n      <div className={classes.innerBlock}>\r\n        <div className={classes.canvas} id={\"canvas-\"+props.position}>\r\n          \r\n        </div>\r\n        <p className={classes.paragraph}>\r\n          D: {props.position}, \r\n          S: {props.samples || 0}\r\n        </p>\r\n      </div>\r\n    </ButtonBase>\r\n  )\r\n}\r\n\r\nclass SampleSubmission extends React.Component{\r\n\r\n  state = {\r\n    selected: \"up\",\r\n    up: 0,\r\n    down: 0,\r\n    left: 0,\r\n    right: 0\r\n  }\r\n  canvas = {}\r\n  directions = [\"up\", 'down', 'right', 'left']\r\n\r\n  setSelected = selected => {\r\n    this.setState(prevState => ({\r\n      selected,\r\n    }))\r\n    this.addImage()\r\n    //console.log(this.state)\r\n  }\r\n\r\n  addImage = async () => {\r\n    ML.isPredicting = false\r\n    setSnakeDirection(22)\r\n    this.setState(prevState => ({\r\n      [this.state.selected]: prevState[this.state.selected]+=1\r\n    }))\r\n    const image = await ML.getImage()\r\n    this.draw(image, this.canvas[this.state.selected])\r\n    ML.addExample(this.directions.indexOf(this.state.selected))\r\n  }\r\n\r\n  componentDidMount = () => {\r\n\r\n    for(let i = 0; i < 4; i++) {\r\n      //console.log(document.getElementById(\"canvas-\"+this.directions[i]), \"canvas-\"+this.directions[i])\r\n      this.canvas[this.directions[i]] = new Canvas()\r\n      this.canvas[this.directions[i]].create(112, 112, document.getElementById(\"canvas-\"+this.directions[i]), 2)\r\n    }\r\n  }\r\n\r\n  draw = async (image, canvas) => {\r\n    //console.log(image)\r\n    const [width, height] = [224, 224];\r\n    const ctx = canvas.getCtx();\r\n    const imageData = new ImageData(width, height);\r\n    const data = image.dataSync();\r\n    //console.log(data)\r\n    for (let i = 0; i < height * width; ++i) {\r\n      const j = i * 4;\r\n      imageData.data[j + 0] = (data[i * 3 + 0] + 1) * 127;\r\n      imageData.data[j + 1] = (data[i * 3 + 1] + 1) * 127;\r\n      imageData.data[j + 2] = (data[i * 3 + 2] + 1) * 127;\r\n      imageData.data[j + 3] = 255;\r\n    }\r\n    ctx.putImageData(imageData, 0, 0);\r\n  }\r\n\r\n  render() {\r\n    const classes = this.props.classes\r\n    const selected = this.state.selected\r\n    return (\r\n      <div className={classes.container}>\r\n        <div className={classes.blockHolder}>\r\n          <ImageBlock position={'up'} onClick={e => this.setSelected(e)} selected={selected } samples={this.state.up}/>\r\n        </div>\r\n        <div className={classes.blockHolder}>\r\n          <ImageBlock position={'left'} onClick={e => this.setSelected(e)} selected={selected} samples={this.state.left}/>\r\n          <Button color={'secondary'} className={classes.iconButton} onClick={() => this.addImage()} variant=\"contained\">\r\n            Capture\r\n          </Button>\r\n          <ImageBlock position={'right'} onClick={e => this.setSelected(e)} selected={selected} samples={this.state.right}/>\r\n        </div>\r\n        <div className={classes.blockHolder}>\r\n          <ImageBlock position={'down'} onClick={e => this.setSelected(e)} selected={selected} samples={this.state.down}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(_styles)(SampleSubmission);","import React from 'react'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport GameButtons from './GameButtons'\r\nimport Learning from './Learning'\r\nimport SampleSubmission from './SampleSubmission'\r\n\r\nconst styles = makeStyles(theme => ({\r\n  canvas: {\r\n    height: 440,\r\n    maxWidth: 1000,\r\n    margin: 'auto'\r\n  },\r\n  canvasContainer: {\r\n    justifyContent: 'center'\r\n  }\r\n}))\r\n\r\nfunction Layout(){\r\n\r\n  const classes = styles()\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid container>\r\n        <Grid item xs={12} className={classes.canvasContainer}>\r\n          <div className={classes.canvas} id=\"game-canvas\"></div>\r\n        </Grid>\r\n        <Grid item xs={12}> <GameButtons/> </Grid>\r\n      </Grid>\r\n      <Grid container alignItems={'center'}>\r\n        <Grid item xs={6}><Learning /></Grid>\r\n        <Grid item xs={6}><SampleSubmission /></Grid>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Layout","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Grid from '@material-ui/core/Grid';\nimport { Provider } from 'react-redux'\nimport store from './Store'\nimport SnackBar from './Enhancements/SnackBar'\nimport { BrowserRouter } from 'react-router-dom'\nimport Layout from './Layout'\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport \"./ml/index\"\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n});\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n      <ThemeProvider theme={darkTheme}>\n        <Grid className=\"App\" container>\n        <div id=\"mobile\">\n          It's a desktop app won't work fine in mobile. If you don't want to listen to me. Top right corner, click the three dots and hit desktop site.\n        </div>\n          <CssBaseline />\n          <SnackBar />\n          <Layout />\n\n        </Grid>\n        </ThemeProvider>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}